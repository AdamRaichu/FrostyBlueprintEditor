<ResourceDictionary 
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:local="clr-namespace:XamlGeneratedNamespace"
    xmlns:core="clr-namespace:Frosty.Core.Controls;assembly=FrostyCore"
    xmlns:ctrl="clr-namespace:Frosty.Controls;assembly=FrostyControls"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:fdev="FrostyDeveloper"
    xmlns:nodify="https://miroiu.github.io/nodify"
    xmlns:blueprintEditor="clr-namespace:BlueprintEditorPlugin"
    xmlns:windows="clr-namespace:BlueprintEditorPlugin.Windows"
    xmlns:blueprintEditor1="clr-namespace:BlueprintEditorPlugin.Editors.BlueprintEditor"
    xmlns:nodes="clr-namespace:BlueprintEditorPlugin.Editors.BlueprintEditor.Nodes"
    xmlns:ports="clr-namespace:BlueprintEditorPlugin.Editors.BlueprintEditor.Nodes.Ports"
    xmlns:options="clr-namespace:BlueprintEditorPlugin.Options"
    xmlns:connections="clr-namespace:BlueprintEditorPlugin.Editors.BlueprintEditor.Connections"
    xmlns:presentationOptions="http://schemas.microsoft.com/winfx/2006/xaml/presentation/options">

    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="/FrostyControls;component/Themes/Generic.xaml"/>
    </ResourceDictionary.MergedDictionaries>
    
    <BooleanToVisibilityConverter x:Key="BoolToVis" />
    
    <SolidColorBrush x:Key="EventConnectionColor"
                     Color="#F8F8F8" 
                     presentationOptions:Freeze="True" />
    <Color x:Key="PropertyColor" R="95" G="217" B="95"/> <!--Work around lol-->
    <SolidColorBrush x:Key="PropertyConnectionColor"
                     Color="#5FD95F" 
                     presentationOptions:Freeze="True" />
    <SolidColorBrush x:Key="LinkConnectionColor"
                     Color="#6FA9CE" 
                     presentationOptions:Freeze="True" />
    <SolidColorBrush x:Key="NodeHeaderColor"
                     Color="#3F3F3F" 
                     presentationOptions:Freeze="True" />
    <SolidColorBrush x:Key="NodeBackgroundColor"
                     Color="#C2C2C2" 
                     presentationOptions:Freeze="True" />
    
    <SolidColorBrush x:Key="NodeBorderColor"
                     Color="Transparent" 
                     presentationOptions:Freeze="True" />
    <SolidColorBrush x:Key="NodeSelectedColor"
                     Color="#EEE8AB" 
                     presentationOptions:Freeze="True" />
    
    <SolidColorBrush x:Key="CanvasBackground" Color="#141414"
                     presentationOptions:Freeze="True" 
                     RenderOptions.CachingHint="Cache"
                     RenderOptions.CacheInvalidationThresholdMaximum="2"
                     RenderOptions.CacheInvalidationThresholdMinimum="0.35"
                     RenderOptions.BitmapScalingMode="Linear"/>
    <SolidColorBrush x:Key="CanvasGridMajor" Color="#000000"
                     presentationOptions:Freeze="True" 
                     RenderOptions.CachingHint="Cache"
                     RenderOptions.CacheInvalidationThresholdMaximum="2"
                     RenderOptions.CacheInvalidationThresholdMinimum="0.35"
                     RenderOptions.BitmapScalingMode="Linear"/>
    <SolidColorBrush x:Key="CanvasGridMinor" Color="#1C1C1C"
                     presentationOptions:Freeze="True" 
                     RenderOptions.CachingHint="Cache"
                     RenderOptions.CacheInvalidationThresholdMaximum="2"
                     RenderOptions.CacheInvalidationThresholdMinimum="0.35"
                     RenderOptions.BitmapScalingMode="Linear"/>
    
    <GeometryDrawing x:Key="SmallGridGeometry"
                     Geometry="M0,0 L0,1 0.03,1 0.03,0.03 1,0.03 1,0 Z"
                     Brush="{StaticResource CanvasGridMinor}" 
                     presentationOptions:Freeze="True" />

    <GeometryDrawing x:Key="LargeGridGeometry"
                     Geometry="M0,0 L0,1 0.015,1 0.015,0.015 1,0.015 1,0 Z"
                     Brush="{StaticResource CanvasGridMajor}" 
                     presentationOptions:Freeze="True" />
    
    <!--Blueprint Editor-->
    <Style TargetType="{x:Type blueprintEditor:BlueprintEditor}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type blueprintEditor:BlueprintEditor}">
                    <Grid Background="Aqua">
                        <blueprintEditor1:BlueprintGraphEditor x:Name="GraphEditor" IsEnabled="True"/>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    
    <!--Generic node style-->
    <Style TargetType="{x:Type nodify:Node}">
        <Setter Property="Background" Value="{StaticResource NodeBackgroundColor}"/>
        <Setter Property="ContentBrush" Value="{StaticResource NodeBackgroundColor}"/>
        <Setter Property="HeaderBrush" Value="{StaticResource NodeHeaderColor}" />
        <Setter Property="FontFamily" Value="Consolas" />
        <Setter Property="BorderBrush" Value="#555555" />
    </Style>
    
    <!--Item container style-->
    <Style TargetType="{x:Type nodify:ItemContainer}"
           BasedOn="{StaticResource {x:Type nodify:ItemContainer}}"
           x:Key="VertexStyle">
        <Setter Property="Location"
                Value="{Binding Location, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
        <Setter Property="BorderThickness"
                Value="2">
        </Setter>
        <Setter Property="HighlightBrush"
                Value="{StaticResource NodeSelectedColor}">
        </Setter>
        <Setter Property="BorderBrush"
                Value="{StaticResource NodeBorderColor}">
        </Setter>
        <Setter Property="SelectedBrush"
                Value="{StaticResource NodeSelectedColor}">
        </Setter>
        <Setter Property="ActualSize"
                Value="{Binding Size, Mode=OneWayToSource}" />
        <Style.Triggers>
            <Trigger Property="IsSelected" Value="True">
                <Setter Property="Panel.ZIndex" Value="1" />
            </Trigger>
        </Style.Triggers>
    </Style>
    
    <!--Bodied node generic-->
    <ControlTemplate TargetType="{x:Type nodify:Node}"
                             x:Key="BodiedNodeTemplate">
                <Border Background="{TemplateBinding Background}"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        BorderThickness="{TemplateBinding BorderThickness}"
                        Padding="{TemplateBinding Padding}"
                        CornerRadius="3"
                        RenderOptions.BitmapScalingMode="Linear"
                        RenderOptions.EdgeMode="Aliased">
                    <Grid>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="*" />
                            <RowDefinition Height="Auto" />
                        </Grid.RowDefinitions>

                        <!--Header-->
                        <Border Visibility="{TemplateBinding HasHeader, Converter={StaticResource BoolToVis}}"
                                Background="{TemplateBinding HeaderBrush}"
                                CornerRadius="3 3 0 0"
                                Grid.ColumnSpan="3"
                                Padding="6 4 6 4">
                            <ContentPresenter ContentSource="Header" />
                        </Border>

                        <!--Body-->
                        <Grid Grid.Row="1">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto" />
                                <ColumnDefinition Width="*" />
                                <ColumnDefinition Width="Auto" />
                            </Grid.ColumnDefinitions>

                            <!--Data IN-->
                            <ItemsControl ItemsSource="{TemplateBinding Input}"
                                          VerticalAlignment="{TemplateBinding VerticalAlignment}"
                                          ItemTemplate="{TemplateBinding InputConnectorTemplate}"
                                          Focusable="False" />

                            <!--Content-->
                            <ContentPresenter Grid.Column="1" 
                                              VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                              HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"/>

                            <!--Data OUT-->
                            <ItemsControl ItemsSource="{TemplateBinding Output}"
                                          ItemTemplate="{TemplateBinding OutputConnectorTemplate}"
                                          VerticalAlignment="{TemplateBinding VerticalAlignment}"
                                          HorizontalContentAlignment="Right"
                                          Grid.Column="2"
                                          Focusable="False" />
                        </Grid>
                    </Grid>
                </Border>
            </ControlTemplate>
    
</ResourceDictionary>